"""Fix student model

Revision ID: abd4302df200
Revises: 936401bc2e86
Create Date: 2025-05-08 10:09:34.251767

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'abd4302df200'
down_revision = '936401bc2e86'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('teachers')
    op.drop_table('sites')
    op.drop_table('lore_entries')
    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.drop_column('bio')
        batch_op.drop_column('photo_url')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint('users_username_key', type_='unique')
        batch_op.drop_column('is_admin')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.create_unique_constraint('users_username_key', ['username'])

    with op.batch_alter_table('students', schema=None) as batch_op:
        batch_op.add_column(sa.Column('photo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True))

    op.create_table('lore_entries',
    sa.Column('title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('event_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('importance', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('related_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('sources', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='lore_entries_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='lore_entries_pkey')
    )
    op.create_table('sites',
    sa.Column('name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('founding_year', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('photo_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('features', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='sites_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='sites_pkey')
    )
    op.create_table('teachers',
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('specialty', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    sa.Column('years_experience', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('courses', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('office_location', sa.VARCHAR(length=120), autoincrement=False, nullable=True),
    sa.Column('schedule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='teachers_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='teachers_pkey')
    )
    # ### end Alembic commands ###
